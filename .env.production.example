# Merlin Job Application System - Production Environment Configuration
# Digital Ocean App Platform Deployment
#
# IMPORTANT: These variables should be set in Digital Ocean App Platform
# Console under Settings > App-Level Environment Variables
# DO NOT commit actual production values to version control

# =============================================================================
# Deployment Platform
# =============================================================================

# Deployment platform identifier (enables Digital Ocean-specific configuration)
DEPLOYMENT_PLATFORM=digitalocean

# Flask environment: production
FLASK_ENV=production

# Flask debug mode: False (CRITICAL - never enable debug in production)
FLASK_DEBUG=False

# =============================================================================
# Database Configuration (Digital Ocean Managed PostgreSQL)
# =============================================================================

# Digital Ocean App Platform auto-injects this when you link a managed database
# Format: postgresql://user:password@host:port/database?sslmode=require
# You can also manually set this to your managed database connection string
DATABASE_URL=${merlin-postgres-prod.DATABASE_URL}

# Alternative: Set individual components (DATABASE_URL takes priority)
# DATABASE_HOST=your-db-cluster.db.ondigitalocean.com
# DATABASE_PORT=25060
# DATABASE_NAME=defaultdb
# DATABASE_USER=doadmin
# DATABASE_PASSWORD=your_secure_password_here

# =============================================================================
# API Authentication
# =============================================================================

# Webhook API Key for securing API endpoints
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
WEBHOOK_API_KEY=your_production_api_key_here

# =============================================================================
# Security Settings
# =============================================================================

# Flask secret key for session encryption and CSRF protection
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
# This replaces the old SESSION_SECRET variable to align with Flask conventions
SECRET_KEY=your_production_secret_key_here

# CORS allowed origins (comma-separated)
# Update with your production domain(s)
CORS_ORIGINS=https://your-app.ondigitalocean.app,https://yourdomain.com

# =============================================================================
# External Services
# =============================================================================

# Google Gemini AI API Key
GEMINI_API_KEY=your_gemini_api_key_here

# Apify API Token (for job scraping)
APIFY_API_TOKEN=your_apify_token_here

# =============================================================================
# Gmail API Configuration (OAuth 2.0)
# =============================================================================

# Base64-encoded Gmail credentials JSON
# Encode with: cat storage/gmail_credentials.json | base64
GMAIL_CREDENTIALS_JSON=base64_encoded_credentials_here

# Base64-encoded Gmail token JSON (if pre-authenticated)
# Encode with: cat storage/gmail_token.json | base64
GMAIL_TOKEN_JSON=base64_encoded_token_here

# Alternative: Path-based (requires persistent storage volume)
# GMAIL_CREDENTIALS_PATH=/app/storage/gmail_credentials.json
# GMAIL_TOKEN_PATH=/app/storage/gmail_token.json

# =============================================================================
# Google Drive API Configuration (OAuth 2.0)
# =============================================================================

# Base64-encoded Google Drive credentials JSON
GOOGLE_DRIVE_CREDENTIALS_JSON=base64_encoded_credentials_here

# Base64-encoded Google Drive token JSON
GOOGLE_DRIVE_TOKEN_JSON=base64_encoded_token_here

# Alternative: Path-based
# GOOGLE_DRIVE_CREDENTIALS_PATH=/app/storage/google_drive_credentials.json
# GOOGLE_DRIVE_TOKEN_PATH=/app/storage/google_drive_token.json

# =============================================================================
# Storage Configuration
# =============================================================================

# Storage backend: local, google_drive, digitalocean_spaces
STORAGE_BACKEND=local

# For local storage (uses container filesystem - limited to 10GB in App Platform)
LOCAL_STORAGE_PATH=/app/storage/generated_documents

# For Digital Ocean Spaces (S3-compatible object storage - recommended for production)
# STORAGE_BACKEND=digitalocean_spaces
# SPACES_REGION=nyc3
# SPACES_BUCKET=merlin-documents
# SPACES_ACCESS_KEY=your_spaces_access_key
# SPACES_SECRET_KEY=your_spaces_secret_key
# SPACES_ENDPOINT=https://nyc3.digitaloceanspaces.com

# =============================================================================
# Application Settings
# =============================================================================

# Application version
APP_VERSION=4.4

# Logging level: INFO, WARNING, ERROR, CRITICAL (use INFO for production)
LOG_LEVEL=INFO

# Logging format: json (recommended for production - enables log aggregation)
LOG_FORMAT=json

# Optional: Log file path (Digital Ocean captures stdout/stderr automatically)
# LOG_FILE=/app/storage/logs/app.log

# =============================================================================
# URL Tracking Configuration
# =============================================================================

# Enable automatic URL tracking for Calendly, LinkedIn, and Portfolio URLs
ENABLE_URL_TRACKING=true

# Base redirect URL for tracked links (update to your production domain)
BASE_REDIRECT_URL=https://your-app.ondigitalocean.app/track

# =============================================================================
# Email Configuration
# =============================================================================

# Professional Email Address
USER_EMAIL_ADDRESS=your.professional.email@gmail.com

# Display name for emails
USER_DISPLAY_NAME=Steve Glen

# Contact Information
USER_PHONE=(780) 555-0123
USER_LOCATION=Edmonton, Alberta, Canada
USER_PROFESSIONAL_TITLE=Marketing Communications Professional

# Professional Links
USER_LINKEDIN_URL=linkedin.com/in/steveglen
USER_PORTFOLIO_URL=
USER_WEBSITE_URL=

# Email Template Configuration
EMAIL_USE_HTML=true
EMAIL_TEMPLATE_DEFAULT=professional
EMAIL_ENABLE_TRACKING=true
EMAIL_ENABLE_PREVIEW=true
EMAIL_SIGNATURE_ICONS=false

# Email Validation
EMAIL_VALIDATE_URLS=true
EMAIL_VALIDATE_SPELLING=false
EMAIL_BLOCK_ON_ERRORS=true

# Email Delivery & Retry
EMAIL_MAX_RETRIES=3
EMAIL_RETRY_DELAY_SECONDS=300
EMAIL_MAX_DAILY_SENDS=50
EMAIL_INCLUDE_REFERENCE_ID=false

# =============================================================================
# Feature Flags
# =============================================================================

# Enable/disable certain features
ENABLE_EMAIL_SENDING=True
ENABLE_JOB_SCRAPING=True
ENABLE_AI_ANALYSIS=True

# =============================================================================
# Rate Limiting
# =============================================================================

# Rate limiting settings (adjust based on expected traffic)
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# =============================================================================
# Document Authenticity Settings
# =============================================================================

# Metadata Generation
DOCX_CREATION_DATE_RANGE_DAYS=30
DOCX_MODIFICATION_MAX_DAYS=7
DOCX_BUSINESS_HOURS_START=9
DOCX_BUSINESS_HOURS_END=18
DOCX_MIN_EDITING_TIME_MINUTES=30
DOCX_MAX_EDITING_TIME_MINUTES=180

# Typography Enhancements
DOCX_ENABLE_SMART_QUOTES=true
DOCX_ENABLE_SMART_DASHES=true
DOCX_ENABLE_SMART_ELLIPSIS=true
DOCX_ENABLE_NON_BREAKING_SPACES=true
DOCX_ENABLE_SPECIAL_CHARACTERS=true

# Verification Settings
DOCX_ENABLE_PRE_DELIVERY_VERIFICATION=true
DOCX_BLOCK_ON_VERIFICATION_FAILURE=true
DOCX_VERIFICATION_TIMEOUT_SECONDS=10
DOCX_MINIMUM_AUTHENTICITY_SCORE=75

# =============================================================================
# Gunicorn Configuration (overrides gunicorn_config.py if set)
# =============================================================================

# Number of worker processes (default: auto-calculated from CPU cores)
# GUNICORN_WORKERS=3

# Worker timeout in seconds (default: 120)
# GUNICORN_TIMEOUT=120

# =============================================================================
# Digital Ocean Specific Settings
# =============================================================================

# Port (App Platform sets this automatically - usually 8080)
# PORT=8080

# App name (App Platform auto-injects this)
# DO_APP_NAME=merlin-job-application-system

# Database connection pooling (recommended for production)
# SQLALCHEMY_POOL_SIZE=10
# SQLALCHEMY_MAX_OVERFLOW=20
# SQLALCHEMY_POOL_TIMEOUT=30

# =============================================================================
# Monitoring & Observability (Optional)
# =============================================================================

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# New Relic License Key (optional)
# NEW_RELIC_LICENSE_KEY=your_new_relic_license_key

# =============================================================================
# NOTES FOR DIGITAL OCEAN APP PLATFORM
# =============================================================================
#
# 1. Set these variables in App Platform Console:
#    - Go to your app → Settings → App-Level Environment Variables
#    - Add each variable with its production value
#    - Mark sensitive values as "Secret" (encrypted at rest)
#
# 2. Database Connection:
#    - Link your Managed PostgreSQL in App Platform Console
#    - DATABASE_URL will be auto-injected as ${db-name.DATABASE_URL}
#    - SSL is automatically enabled for managed databases
#
# 3. Secrets Management:
#    - Never commit actual values to Git
#    - Use GitHub Secrets for CI/CD workflows
#    - Use App Platform environment variables for runtime
#
# 4. OAuth Credentials:
#    - Gmail/Google Drive credentials should be base64-encoded
#    - Store as secrets in App Platform
#    - Application will decode them at runtime
#
# 5. Storage:
#    - Local storage is limited to 10GB and is ephemeral
#    - For production, use Digital Ocean Spaces (S3-compatible)
#    - Or configure Google Drive storage backend
#
# 6. Logging:
#    - Set LOG_FORMAT=json for structured logging
#    - App Platform captures stdout/stderr automatically
#    - View logs in App Platform Console → Runtime Logs
#
