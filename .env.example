# Merlin Job Application System - Environment Configuration Template
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control - it contains sensitive credentials

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL Database Settings
PGPASSWORD=your_database_password_here
DATABASE_NAME=local_Merlin_3
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USER=postgres

# Full PostgreSQL connection string (optional - overrides individual settings)
# DATABASE_URL=postgresql://user:password@localhost:5432/local_Merlin_3

# =============================================================================
# API Authentication
# =============================================================================

# Webhook API Key for securing API endpoints
WEBHOOK_API_KEY=your_secure_api_key_here

# =============================================================================
# Storage Configuration
# =============================================================================

# Storage backend type: local, google_drive
# Default: local (filesystem storage)
STORAGE_BACKEND=local

# Application version (used for Google Drive folder organization)
# Format: X.Y (e.g., 4.1, 4.2, 5.0)
APP_VERSION=4.1

# Local filesystem storage path
# Default: ./storage/generated_documents
LOCAL_STORAGE_PATH=./storage/generated_documents

# Google Drive API Configuration
# Path to OAuth 2.0 credentials file (download from Google Cloud Console)
GOOGLE_DRIVE_CREDENTIALS_PATH=./storage/google_drive_credentials.json
# Path to store OAuth token (auto-generated after first authentication)
GOOGLE_DRIVE_TOKEN_PATH=./storage/google_drive_token.json

# =============================================================================
# External Services
# =============================================================================

# Google Gemini AI API Key
GEMINI_API_KEY=your_gemini_api_key_here

# Apify API Token (for job scraping)
APIFY_API_TOKEN=your_apify_token_here

# Gmail API Configuration (OAuth 2.0)
# Credentials file path
GMAIL_CREDENTIALS_PATH=./storage/gmail_credentials.json
GMAIL_TOKEN_PATH=./storage/gmail_token.json

# =============================================================================
# Application Settings
# =============================================================================

# Flask environment: development, production
FLASK_ENV=development

# Flask debug mode: True or False
FLASK_DEBUG=True

# Application logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# =============================================================================
# Security Settings
# =============================================================================

# Secret key for Flask session encryption
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your_secret_key_here

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5000

# =============================================================================
# Development Settings
# =============================================================================

# Enable/disable certain features for testing
ENABLE_EMAIL_SENDING=False
ENABLE_JOB_SCRAPING=True
ENABLE_AI_ANALYSIS=True

# Rate limiting settings
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# =============================================================================
# Document Authenticity Settings
# =============================================================================

# Metadata Generation
# How far back to randomize creation dates (1-30 days ago)
DOCX_CREATION_DATE_RANGE_DAYS=30

# Maximum days between creation and modification (0-7 days)
DOCX_MODIFICATION_MAX_DAYS=7

# Business hours for realistic timestamps (9 AM - 6 PM)
DOCX_BUSINESS_HOURS_START=9
DOCX_BUSINESS_HOURS_END=18

# Editing time simulation (minutes)
DOCX_MIN_EDITING_TIME_MINUTES=30
DOCX_MAX_EDITING_TIME_MINUTES=180

# Typography Enhancements
# Enable smart quotation marks (straight to curly)
DOCX_ENABLE_SMART_QUOTES=true

# Enable smart dashes (double hyphen to em dash, date ranges to en dash)
DOCX_ENABLE_SMART_DASHES=true

# Enable smart ellipsis (three periods to ellipsis character)
DOCX_ENABLE_SMART_ELLIPSIS=true

# Enable non-breaking spaces after titles, units, etc.
DOCX_ENABLE_NON_BREAKING_SPACES=true

# Enable special character formatting (degree symbols, trademark, etc.)
DOCX_ENABLE_SPECIAL_CHARACTERS=true

# Verification Settings
# Enable authenticity verification before document delivery
DOCX_ENABLE_PRE_DELIVERY_VERIFICATION=true

# Block document delivery if verification fails
DOCX_BLOCK_ON_VERIFICATION_FAILURE=true

# Maximum time for verification process (seconds)
DOCX_VERIFICATION_TIMEOUT_SECONDS=10

# Minimum authenticity score to allow document delivery (0-100)
DOCX_MINIMUM_AUTHENTICITY_SCORE=75
